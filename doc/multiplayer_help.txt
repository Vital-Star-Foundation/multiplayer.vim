*multiplayer_help.txt*	For Vim version 8.0	November 2016
*multiplayer* *Multiplayer*
==============================================================================
  __  __ _    _ _   _______ _____ _____  _           __     ________ _____  
 (  \/  ( )  ( ( ) (__   __(_   _(  __ \( )  V     /\\ \   / /  ____(  __ \ 
 ( \  / ( )  ( ( )    ( )    ( ) ( (__) ( )  I    /  \\ \_/ /( (__  ( (__) )
 ( )\/( ( )  ( ( )    ( )    ( ) (  ___/( )  M   / /\ \\   / (  __) (  _  / 
 ( )  ( ( )__( ( )____( )   _( )_( )    ( )_____/ ____ \( )  ( (____( ) \ \ 
 (_)  ( )\____/(______(_)  (_____( )    (______/_/    \_\_)  (______( )  \_\
      (_)                        (_)                                (_)	
        \                         /                                  /
         \                       /                                  / 
         _\__ _             _ __/_                             _ __/_ 
        (+)__(+)           (+)__(+)                           (+)__(+)
        //    \\           //    \\                           //    \\
==============================================================================
CONTENTS                                                  *multiplayer-contents*

    1. Intro.................................................|multiplayer-intro|
    2. Options.............................................|multiplayer-options|
    3. Commands...........................................|multiplayer-commands|
    4. Statusline.......................................|multiplayer-statusline||
    5. Mappings...........................................|multiplayer-mappings|
    6. Future...............................................|multiplayer-future|

==============================================================================
INTRO                                                        *multiplayer-intro*

This Vim plugin allows multiple players (users) to edit the same file at the
same time.
Install the plugin on one computer. Now all players should ssh into this
computer. If a player opens a file that is already open by another player
(there is a .swp-file), then that player is invited to join as multiplayer.
(press 'M'). Users can also explicitly connect and disconnect.
Each player can set some player specific options that are stored in a profile
and loaded the next time that player enters vim.
You can read other players registers, so you can put (paste) what an other
user has yanked (copied).
You can also read other players ':'-register and '/'-register, so you can
re-use thier ex-commands and search patterns.
You can jump to an other players location (file, line, column) or to an
other players last visual selection.
You can configure Multiplayer to follow other players in split windows if
they move out of your field of view. Either in the same file, or in to
an other file.

==============================================================================
OPTIONS                                                    *multiplayer-options*

  |g:loaded_multiplayer|
    Set this to 1 to disable Multiplayer completely.

  |g:multiplayer_profiles_path|
    Where to save player profiles. If this is not set, player profiles are
    stored next to the plugin folder.

  |g:multiplayer_name|
    Default player name, if not set by player profile. If this is not set
    either, then 'noname' is used.

  |g:multiplayer_nmap_leader|
    Default normal mode map leader, if not set by player profile. If this is
    not set either, then <F4> is used. Leave empty to disable mappings in
    normal mode.

  |g:multiplayer_cmap_leader|
    Default command-line mode map leader, if not set by player profile. If
    this is not set either, then the empty string is used. Leave empty to
    disable mappings in command-line mode.

  |g:multiplayer_imap_leader|
    Default insert mode map leader, if not set by player profile. If this is
    not set either, then the empty string is used. Leave empty to disable
    mappings in insert mode. (not recommended for unexperienced players.)

  |g:multiplayer_auto_connect|
    connect automatically when vim starts up.
    Default 'y' for remote users, and 'n' for local users.

  |g:multiplayer_chat_mapping|
    A mapping to quickly chat. Default m<CR>. If set to empty, there's no quick
    mapping to chat. See also |MultiplayerChat|

  |g:multiplayer_chat_destination|
    A string that specifies where incoming chat messages go.
    Can be set to any combination of the following:

    c	incoming chat goes to |quickfix| window
    l	incoming chat goes to |location-list|
    e	incoming chat are |echo|'ed
    m	incoming chat are |echom|'ed
    C	outgoing chat goes to |quickfix| window
    L	outgoing chat goes to |location-list|
    E	outgoing chat are |echo|'ed
    M	outgoing chat are |echom|'ed

    default: "Cec"

  |g:multiplayer_highlight|
    A list with three elements specifying how the player should be
    highlighted the following places
      - as the cursor
      - in the statusline
      - in MultiplayerLs
      - when executing mappings and more than 3 players connected
      - in chat
    Example: change players appearance while connected:
>
    :MultiplayerLet g:multiplayer_highlight=['inverse','DarkGrey','Yellow']
<


The options are typically set in your .vimrc. If a player wants a different
configuration, then he should use :MultiplayerConfigure or :MultiplayerLet

==============================================================================
COMMANDS                                                  *multiplayer-commands*

:MultiplayerConnect
    Connect

:MultiplayerDisconnect
    Disconnect

:MultiplayerChat {expr}
    Send chat message to all players

:MultiplayerLet {var-name} = {expr}
    Assign variable for current player profile. For example:
>
    :MultiplayerLet &statusline='dull_status'
    :MultiplayerLet &ts=9
<
:MultiplayerLet {var-name}
    Show one assignments for current player profile. For example:
>
    :MultiplayerLet &ts
<
:MultiplayerLet
    Show all assignments for current player profile:
>
    :MultiplayerLet
<
:MultiplayerLs
    Show all players with thier current buffer and line/column

:MultiplayerConfigure
    Go through configuration step-by-step. (You must be connected)

==============================================================================
STATUSLINE                                              *multiplayer-statusline*

    To get info about status of the multiplayer plugin, add this to your
    |statusline| in your .vimrc:
>
    let &statusline .= multiplayer#StatusLine()
<
    To get vim's default statusline, but with multiplayer status inserted, try
    this:
>
    let &statusline = "%<%f %h%m%r%="
    let &statusline .= multiplayer#StatusLine()
    let &statusline .= " %-14.(%l,%c%V%) %P"
<
==============================================================================
MAPPINGS                                                  *multiplayer-mappings*

In the following, <l> denotes the configurable map leader.
If there are more than two players connected, <n> denotes a number pointing out
which other player the operation acts on.
(See also |g:multiplayer_chat_mapping|)

Normal Mode:~

  ["r]<l>p<n>
    Put the text [from register r] from player-n after the cursor. Just like |p|

  ["r]<l>P<n>
    Put the text [from register r] from player-n before the cursor. Just like |P|


  <l>/<n>
    Search forward for player-n's last search pattern. Just like |/|

  <l>?<n>
    Search backward for player-n's last search pattern. Just like |?|

  <l>*<n>
    Search forward for the nearest word to player-n's cursor. Just like * (|star|)
    Complete word.

  <l>#<n>
    Search backward for the nearest word to player-n's cursor. Just like |#|
    Complete word.

  <l>g*<n>
    Search forward for the nearest word to player-n's cursor. Just like g* (|gstar|)

  <l>g#<n>
    Search backward for the nearest word to player-n's cursor. Just like |g#|

  <l>q/<n>
  <l>q?<n>
    Open Command-line window, with player-n's search history.
    Just like |q/| and |q?|

  <l>:<n>
    Edit player-n's last ex-command. Just like |:|

  <l>q:<n>
    Open Command-line window, with player-n's Ex history, Just like |q:|

  <l>g.<n>
    Go to player-n.

  <l>g%<n>
    Go to player-n's file.

  <l>gv<n>
    Go to player-n's last visual selection. Just like |gv|

Command-line Mode: (search-mode/ex-mode)~
  <l><C-R>r<n>
    Insert contents of player-n's register r. Just like |c_CTRL-r|

Insert Mode:~
  <l><C-R>r<n>
    Insert contents of player-n's register r. Just like |i_CTRL-R|

==============================================================================
FUTURE                                                      *multiplayer-future*

Should work on Windows and Mac as well.
Don't depend on 'diff' in the OS.
Problems if remote player has an other terminal encoding than the master.
Follow other players in split windows.
Go to other players visual selection.
Notify other players when going to/from visual-line mode.
unittest 'written'. Also, write to new name.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
